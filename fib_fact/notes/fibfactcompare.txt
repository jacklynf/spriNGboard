For these values of N, recursive factorial is much faster than recursive Fibonacci. The time of iterative implementations for both Fibonacci 
and factorial appear to be comparable to each other. I did notice that implementing the factorial functions was a lot simpler for me to think
of, whereas I definitely had a harder time with the iterative versions (which surprised me, as iteration has felt more natural to me in general).
I honestly had to look up some help for the iterative Fibonacci sequence to figure out how to start it. So, like we talked about last week, 
recursion seems to be helpful in figuring out how to solve problems, but implementation is more efficient/faster when using iteration. 
